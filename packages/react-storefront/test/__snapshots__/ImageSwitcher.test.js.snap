// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageSwitcher only shows images by default, no bells and whistles 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}}>
        <inject-ImageSwitcher-with-app images={{...}} classes={{...}}>
          <ImageSwitcher images={{...}} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-1" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-2">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-3">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-36">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-18">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-19 RSFImageSwitcher-rightArrow-21" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-19 RSFImageSwitcher-rightArrow-21" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-40 RSFImageSwitcher-arrow-19 RSFImageSwitcher-rightArrow-21" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-40 RSFImageSwitcher-arrow-19 RSFImageSwitcher-rightArrow-21" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-46 MuiIconButton-root-40 RSFImageSwitcher-arrow-19 RSFImageSwitcher-rightArrow-21" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-45">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-49 RSFImageSwitcher-icon-22" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-58" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-58" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-28">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-26">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render AmpImageSwitcher when amp=true 1`] = `
<TestProvider app={{...}} nextId={[Function: nextId]}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-AmpState>
        <AmpState amp={true} initialState={{...}} id="moovAmpState">
          <Provider ampStateId="moovAmpState">
            <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
              <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <amp-state id="moovAmpState">
              <script type="application/json" dangerouslySetInnerHTML={{...}} />
            </amp-state>
            <WithStyles(inject-ImageSwitcher-with-app) product={{...}} images={{...}}>
              <inject-ImageSwitcher-with-app product={{...}} images={{...}} classes={{...}}>
                <ImageSwitcher product={{...}} images={{...}} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
                  <WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId-app) product={{...}} images={{...}} className={[undefined]} classes={{...}} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom">
                    <inject-AmpImageSwitcher-with-nextId-ampStateId-app product={{...}} images={{...}} className={[undefined]} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom" classes={{...}}>
                      <AmpImageSwitcher product={{...}} images={{...}} className={[undefined]} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom" classes={{...}} nextId={[Function: nextId]} ampStateId="moovAmpState" app={{...}} type="slides" ampStateProperty="selectedImage">
                        <div className="RSFAmpImageSwitcher-root-620 RSFImageSwitcher-root-585 RSFAmpImageSwitcher-rootImportant-622">
                          <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                            <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                              <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                            </SideEffect(NullComponent)>
                          </HelmetWrapper>
                          <amp-state id="moovAmpState" amp-bind="src=>moovAmpState.colorInteracted ? \\'/images//\\' + moovAmpState.color.selected.id + \\'.json\\' : null" />
                          <div className="RSFAmpImageSwitcher-carouselWrap-623">
                            <BeforeInteracted>
                              <div amp-bind="class=>moovAmpState.colorInteracted ? \\'RSFAmpImageSwitcher-hidden-637\\' : \\'\\'" className="undefined">
                                <Carousel>
                                  <amp-carousel controls={true} id="1" lightbox={true} layout="fill" type="slides" loop={true} amp-bind="slide=> moovAmpState.selectedImage" on="slideChange:AMP.setState({ moovAmpState: { selectedImage: event.index } })">
                                    <amp-img src="/a.jpg" layout="fill" alt={{...}} />
                                    <amp-img src="/b.jpg" layout="fill" alt={{...}} />
                                    <amp-img src="/c.jpg" layout="fill" alt={{...}} />
                                  </amp-carousel>
                                </Carousel>
                              </div>
                            </BeforeInteracted>
                            <AfterInteracted>
                              <div className="RSFAmpImageSwitcher-hidden-637" amp-bind="class=>!moovAmpState.colorInteracted ? \\'RSFAmpImageSwitcher-hidden-637\\' : \\'\\'">
                                <Template items="." single-item={true}>
                                  <amp-list layout="fill" src="/images//000000.json" amp-bind="src=>\\'/images//\\' + moovAmpState.color.selected.id + \\'.json\\'" items="." single-item={true}>
                                    <template type="amp-mustache">
                                      <Carousel>
                                        <amp-carousel controls={true} id="1" lightbox={true} layout="fill" type="slides" loop={true} amp-bind="slide=> moovAmpState.selectedImage" on="slideChange:AMP.setState({ moovAmpState: { selectedImage: event.index } })">
                                          {{#images}}
                                          {{#video}}
                                          <WithStyles(inject-Video) src="{{src}}" layout="fill" alt="{{alt}}">
                                            <inject-Video src="{{src}}" layout="fill" alt="{{alt}}" classes={{...}}>
                                              <Video src="{{src}}" layout="fill" alt="{{alt}}" classes={{...}} amp={true} controls={true}>
                                                <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                                                  <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                                                    <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                                                  </SideEffect(NullComponent)>
                                                </HelmetWrapper>
                                                <amp-video class="RSFVideo-root-638" src="{{src}}" layout="fill" alt="{{alt}}" controls={true} />
                                              </Video>
                                            </inject-Video>
                                          </WithStyles(inject-Video)>
                                          {{/video}}
                                          {{^video}}
                                          <amp-img src="{{.}}" layout="fill" alt="test" />
                                          {{/video}}
                                          {{/images}}
                                        </amp-carousel>
                                      </Carousel>
                                    </template>
                                  </amp-list>
                                </Template>
                              </div>
                            </AfterInteracted>
                          </div>
                        </div>
                      </AmpImageSwitcher>
                    </inject-AmpImageSwitcher-with-nextId-ampStateId-app>
                  </WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId-app)>
                </ImageSwitcher>
              </inject-ImageSwitcher-with-app>
            </WithStyles(inject-ImageSwitcher-with-app)>
          </Provider>
        </AmpState>
      </inject-AmpState>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render AmpImageSwitcher without product colors 1`] = `
<TestProvider app={{...}} nextId={[Function: nextId]}>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <inject-AmpState>
        <AmpState amp={true} initialState={{...}} id="moovAmpState">
          <Provider ampStateId="moovAmpState">
            <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
              <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <amp-state id="moovAmpState">
              <script type="application/json" dangerouslySetInnerHTML={{...}} />
            </amp-state>
            <WithStyles(inject-ImageSwitcher-with-app) product={{...}} images={{...}}>
              <inject-ImageSwitcher-with-app product={{...}} images={{...}} classes={{...}}>
                <ImageSwitcher product={{...}} images={{...}} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
                  <WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId-app) product={{...}} images={{...}} className={[undefined]} classes={{...}} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom">
                    <inject-AmpImageSwitcher-with-nextId-ampStateId-app product={{...}} images={{...}} className={[undefined]} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom" classes={{...}}>
                      <AmpImageSwitcher product={{...}} images={{...}} className={[undefined]} arrows={true} indicators={false} thumbnails={{...}} thumbnailPosition="bottom" classes={{...}} nextId={[Function: nextId]} ampStateId="moovAmpState" app={{...}} type="slides" ampStateProperty="selectedImage">
                        <div className="RSFAmpImageSwitcher-root-674 RSFImageSwitcher-root-639 RSFAmpImageSwitcher-rootImportant-676">
                          <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                            <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                              <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                            </SideEffect(NullComponent)>
                          </HelmetWrapper>
                          <amp-state id="moovAmpState" amp-bind="src=>moovAmpState.colorInteracted ? \\'/images//\\' + moovAmpState.color.selected.id + \\'.json\\' : null" />
                          <div className="RSFAmpImageSwitcher-carouselWrap-677">
                            <BeforeInteracted>
                              <div amp-bind="class=>moovAmpState.colorInteracted ? \\'RSFAmpImageSwitcher-hidden-691\\' : \\'\\'" className="undefined">
                                <Carousel>
                                  <amp-carousel controls={true} id="1" lightbox={true} layout="fill" type="slides" loop={true} amp-bind="slide=> moovAmpState.selectedImage" on="slideChange:AMP.setState({ moovAmpState: { selectedImage: event.index } })">
                                    <amp-img src="/a.jpg" layout="fill" alt={{...}} />
                                    <amp-img src="/b.jpg" layout="fill" alt={{...}} />
                                    <amp-img src="/c.jpg" layout="fill" alt={{...}} />
                                  </amp-carousel>
                                </Carousel>
                              </div>
                            </BeforeInteracted>
                            <AfterInteracted>
                              <div className="RSFAmpImageSwitcher-hidden-691" amp-bind="class=>!moovAmpState.colorInteracted ? \\'RSFAmpImageSwitcher-hidden-691\\' : \\'\\'">
                                <Template items="." single-item={true}>
                                  <amp-list layout="fill" src="/images//000000.json" amp-bind="src=>\\'/images//\\' + moovAmpState.color.selected.id + \\'.json\\'" items="." single-item={true}>
                                    <template type="amp-mustache">
                                      <Carousel>
                                        <amp-carousel controls={true} id="1" lightbox={true} layout="fill" type="slides" loop={true} amp-bind="slide=> moovAmpState.selectedImage" on="slideChange:AMP.setState({ moovAmpState: { selectedImage: event.index } })">
                                          {{#images}}
                                          {{#video}}
                                          <WithStyles(inject-Video) src="{{src}}" layout="fill" alt="{{alt}}">
                                            <inject-Video src="{{src}}" layout="fill" alt="{{alt}}" classes={{...}}>
                                              <Video src="{{src}}" layout="fill" alt="{{alt}}" classes={{...}} amp={true} controls={true}>
                                                <HelmetWrapper defer={true} encodeSpecialCharacters={true}>
                                                  <SideEffect(NullComponent) defer={true} encodeSpecialCharacters={true} script={{...}}>
                                                    <NullComponent defer={true} encodeSpecialCharacters={true} script={{...}} />
                                                  </SideEffect(NullComponent)>
                                                </HelmetWrapper>
                                                <amp-video class="RSFVideo-root-692" src="{{src}}" layout="fill" alt="{{alt}}" controls={true} />
                                              </Video>
                                            </inject-Video>
                                          </WithStyles(inject-Video)>
                                          {{/video}}
                                          {{^video}}
                                          <amp-img src="{{.}}" layout="fill" alt="test" />
                                          {{/video}}
                                          {{/images}}
                                        </amp-carousel>
                                      </Carousel>
                                    </template>
                                  </amp-list>
                                </Template>
                              </div>
                            </AfterInteracted>
                          </div>
                        </div>
                      </AmpImageSwitcher>
                    </inject-AmpImageSwitcher-with-nextId-ampStateId-app>
                  </WithStyles(inject-AmpImageSwitcher-with-nextId-ampStateId-app)>
                </ImageSwitcher>
              </inject-ImageSwitcher-with-app>
            </WithStyles(inject-ImageSwitcher-with-app)>
          </Provider>
        </AmpState>
      </inject-AmpState>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render arrows 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} arrows={true}>
        <inject-ImageSwitcher-with-app images={{...}} arrows={true} classes={{...}}>
          <ImageSwitcher images={{...}} arrows={true} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-457" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-458">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-459">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-492">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-474">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-475 RSFImageSwitcher-rightArrow-477" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-475 RSFImageSwitcher-rightArrow-477" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-496 RSFImageSwitcher-arrow-475 RSFImageSwitcher-rightArrow-477" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-496 RSFImageSwitcher-arrow-475 RSFImageSwitcher-rightArrow-477" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-502 MuiIconButton-root-496 RSFImageSwitcher-arrow-475 RSFImageSwitcher-rightArrow-477" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-501">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-505 RSFImageSwitcher-icon-478" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-514" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-514" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-484">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-482">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render indicator dots 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} showIndicators={true}>
        <inject-ImageSwitcher-with-app images={{...}} showIndicators={true} classes={{...}}>
          <ImageSwitcher images={{...}} showIndicators={true} classes={{...}} app={{...}} thumbnails={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-521" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-522">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-523">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-556">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-538">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-539 RSFImageSwitcher-rightArrow-541" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-539 RSFImageSwitcher-rightArrow-541" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-560 RSFImageSwitcher-arrow-539 RSFImageSwitcher-rightArrow-541" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-560 RSFImageSwitcher-arrow-539 RSFImageSwitcher-rightArrow-541" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-566 MuiIconButton-root-560 RSFImageSwitcher-arrow-539 RSFImageSwitcher-rightArrow-541" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-565">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-569 RSFImageSwitcher-icon-542" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-578" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-578" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-548">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-546">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render thumbnails 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} thumbnails={{...}}>
        <inject-ImageSwitcher-with-app images={{...}} thumbnails={{...}} classes={{...}}>
          <ImageSwitcher images={{...}} thumbnails={{...}} classes={{...}} app={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} thumbnailPosition="bottom" imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-65" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-66">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-67">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-100">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-82">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-83 RSFImageSwitcher-rightArrow-85" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-83 RSFImageSwitcher-rightArrow-85" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-104 RSFImageSwitcher-arrow-83 RSFImageSwitcher-rightArrow-85" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-104 RSFImageSwitcher-arrow-83 RSFImageSwitcher-rightArrow-85" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-110 MuiIconButton-root-104 RSFImageSwitcher-arrow-83 RSFImageSwitcher-rightArrow-85" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-109">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-113 RSFImageSwitcher-icon-86" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-156" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-156" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-92">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-90">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
              <div className="RSFImageSwitcher-bottomThumbs-70">
                <div className="field">
                  <label className="RSFImageSwitcher-thumbsTitle-68" />
                </div>
                <WithStyles(inject-TabsRow-with-app) classes={{...}} imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}}>
                  <inject-TabsRow-with-app imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}}>
                    <TabsRow imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}} app={{...}} variant="scrollable">
                      <WithStyles(Tabs) value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-124 RSFImageSwitcher-tabsRowRoot-94" classes={{...}}>
                        <Tabs value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-124 RSFImageSwitcher-tabsRowRoot-94" theme={{...}} classes={{...}} centered={false} component="div" fullWidth={false} scrollable={false} ScrollButtonComponent={[Function: WithStyles]} scrollButtons="auto" textColor="inherit">
                          <div className="MuiTabs-root-132 RSFTabsRow-root-124 RSFImageSwitcher-tabsRowRoot-94 RSFTabsRow-root-124 RSFImageSwitcher-tabsRowRoot-94" variant="scrollable">
                            <EventListener target="window" onResize={[Function: debounced]} />
                            <div className="MuiTabs-flexContainer-133 RSFTabsRow-centered-130">
                              <div className="MuiTabs-scroller-135 RSFTabsRow-scroller-128 RSFImageSwitcher-tabScroller-95 MuiTabs-fixed-136" style={{...}} role="tablist" onScroll={[Function: debounced]}>
                                <div className="MuiTabs-flexContainer-133 RSFTabsRow-centered-130">
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143 MuiTab-selected-146 RSFTabsRow-selectedTab-126" role="tab" aria-selected={true} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143 MuiTab-selected-146 RSFTabsRow-selectedTab-126" role="tab" aria-selected={true} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-110 MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143 MuiTab-selected-146 RSFTabsRow-selectedTab-126" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={true} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-149">
                                              <WithStyles(inject-Image) src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-78 RSFImage-root-100 RSFImage-fill-103">
                                                      <img src="/at.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-156" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-156" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-110 MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-149">
                                              <WithStyles(inject-Image) src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-78 RSFImage-root-100 RSFImage-fill-103">
                                                      <img src="/bt.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-156" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-156" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-110 MuiTab-root-141 RSFTabsRow-tab-125 MuiTab-textColorInherit-143" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-149">
                                              <WithStyles(inject-Image) src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-78" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-78 RSFImage-root-100 RSFImage-fill-103">
                                                      <img src="/ct.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-156" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-156" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                </div>
                                <WithStyles(TabIndicator) className="MuiTabs-indicator-140 RSFTabsRow-indicator-122" color="secondary" style={{...}}>
                                  <TabIndicator className="MuiTabs-indicator-140 RSFTabsRow-indicator-122" color="secondary" style={{...}} classes={{...}}>
                                    <span className="MuiPrivateTabIndicator-root-153 MuiPrivateTabIndicator-colorSecondary-155 MuiTabs-indicator-140 RSFTabsRow-indicator-122" style={{...}} />
                                  </TabIndicator>
                                </WithStyles(TabIndicator)>
                              </div>
                            </div>
                          </div>
                        </Tabs>
                      </WithStyles(Tabs)>
                    </TabsRow>
                  </inject-TabsRow-with-app>
                </WithStyles(inject-TabsRow-with-app)>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render thumbnails on the left 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} thumbnails={{...}} thumbnailPosition="left">
        <inject-ImageSwitcher-with-app images={{...}} thumbnails={{...}} thumbnailPosition="left" classes={{...}}>
          <ImageSwitcher images={{...}} thumbnails={{...}} thumbnailPosition="left" classes={{...}} app={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-261 RSFImageSwitcher-sideThumbs-270" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-262">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-263">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-296">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-278">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-279 RSFImageSwitcher-rightArrow-281" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-279 RSFImageSwitcher-rightArrow-281" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-300 RSFImageSwitcher-arrow-279 RSFImageSwitcher-rightArrow-281" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-300 RSFImageSwitcher-arrow-279 RSFImageSwitcher-rightArrow-281" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-306 MuiIconButton-root-300 RSFImageSwitcher-arrow-279 RSFImageSwitcher-rightArrow-281" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-305">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-309 RSFImageSwitcher-icon-282" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-352" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-352" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-288">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-286">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
              <div className="RSFImageSwitcher-leftThumbs-268">
                <div className="field">
                  <label className="RSFImageSwitcher-thumbsTitle-264" />
                </div>
                <WithStyles(inject-TabsRow-with-app) classes={{...}} imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}}>
                  <inject-TabsRow-with-app imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}}>
                    <TabsRow imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}} app={{...}} variant="scrollable">
                      <WithStyles(Tabs) value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-320 RSFImageSwitcher-tabsRowRoot-290 RSFImageSwitcher-sideThumbTabs-271" classes={{...}}>
                        <Tabs value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-320 RSFImageSwitcher-tabsRowRoot-290 RSFImageSwitcher-sideThumbTabs-271" theme={{...}} classes={{...}} centered={false} component="div" fullWidth={false} scrollable={false} ScrollButtonComponent={[Function: WithStyles]} scrollButtons="auto" textColor="inherit">
                          <div className="MuiTabs-root-328 RSFTabsRow-root-320 RSFImageSwitcher-tabsRowRoot-290 RSFImageSwitcher-sideThumbTabs-271 RSFTabsRow-root-320 RSFImageSwitcher-tabsRowRoot-290 RSFImageSwitcher-sideThumbTabs-271" variant="scrollable">
                            <EventListener target="window" onResize={[Function: debounced]} />
                            <div className="MuiTabs-flexContainer-329 RSFTabsRow-centered-326 RSFTabsRow-vertical-327">
                              <div className="MuiTabs-scroller-331 RSFTabsRow-scroller-324 RSFImageSwitcher-tabScroller-291 MuiTabs-fixed-332" style={{...}} role="tablist" onScroll={[Function: debounced]}>
                                <div className="MuiTabs-flexContainer-329 RSFTabsRow-centered-326 RSFTabsRow-vertical-327">
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339 MuiTab-selected-342 RSFTabsRow-selectedTab-322 RSFImageSwitcher-selectedSideThumbTab-273" role="tab" aria-selected={true} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339 MuiTab-selected-342 RSFTabsRow-selectedTab-322 RSFImageSwitcher-selectedSideThumbTab-273" role="tab" aria-selected={true} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-306 MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339 MuiTab-selected-342 RSFTabsRow-selectedTab-322 RSFImageSwitcher-selectedSideThumbTab-273" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={true} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-345">
                                              <WithStyles(inject-Image) src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275 RSFImage-root-296 RSFImage-fill-299">
                                                      <img src="/at.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-352" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-352" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-306 MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-345">
                                              <WithStyles(inject-Image) src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275 RSFImage-root-296 RSFImage-fill-299">
                                                      <img src="/bt.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-352" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-352" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-306 MuiTab-root-337 RSFTabsRow-tab-321 RSFImageSwitcher-sideThumbTab-272 MuiTab-textColorInherit-339" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-345">
                                              <WithStyles(inject-Image) src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-274 RSFImageSwitcher-sideThumbnail-275 RSFImage-root-296 RSFImage-fill-299">
                                                      <img src="/ct.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-352" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-352" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                </div>
                                <WithStyles(TabIndicator) className="MuiTabs-indicator-336 RSFTabsRow-indicator-318 RSFTabsRow-noSelection-319" color="secondary" style={{...}}>
                                  <TabIndicator className="MuiTabs-indicator-336 RSFTabsRow-indicator-318 RSFTabsRow-noSelection-319" color="secondary" style={{...}} classes={{...}}>
                                    <span className="MuiPrivateTabIndicator-root-349 MuiPrivateTabIndicator-colorSecondary-351 MuiTabs-indicator-336 RSFTabsRow-indicator-318 RSFTabsRow-noSelection-319" style={{...}} />
                                  </TabIndicator>
                                </WithStyles(TabIndicator)>
                              </div>
                            </div>
                          </div>
                        </Tabs>
                      </WithStyles(Tabs)>
                    </TabsRow>
                  </inject-TabsRow-with-app>
                </WithStyles(inject-TabsRow-with-app)>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render thumbnails on the right 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} thumbnails={{...}} thumbnailPosition="right">
        <inject-ImageSwitcher-with-app images={{...}} thumbnails={{...}} thumbnailPosition="right" classes={{...}}>
          <ImageSwitcher images={{...}} thumbnails={{...}} thumbnailPosition="right" classes={{...}} app={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-359 RSFImageSwitcher-sideThumbs-368" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-360">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-361">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-394">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-376">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-377 RSFImageSwitcher-rightArrow-379" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-377 RSFImageSwitcher-rightArrow-379" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-398 RSFImageSwitcher-arrow-377 RSFImageSwitcher-rightArrow-379" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-398 RSFImageSwitcher-arrow-377 RSFImageSwitcher-rightArrow-379" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-404 MuiIconButton-root-398 RSFImageSwitcher-arrow-377 RSFImageSwitcher-rightArrow-379" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-403">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-407 RSFImageSwitcher-icon-380" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-450" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-450" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-386">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-384">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
              <div className="RSFImageSwitcher-rightThumbs-367">
                <div className="field">
                  <label className="RSFImageSwitcher-thumbsTitle-362" />
                </div>
                <WithStyles(inject-TabsRow-with-app) classes={{...}} imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}}>
                  <inject-TabsRow-with-app imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}}>
                    <TabsRow imageProps={{...}} centered={true} orientation="vertical" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}} app={{...}} variant="scrollable">
                      <WithStyles(Tabs) value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-418 RSFImageSwitcher-tabsRowRoot-388 RSFImageSwitcher-sideThumbTabs-369" classes={{...}}>
                        <Tabs value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-418 RSFImageSwitcher-tabsRowRoot-388 RSFImageSwitcher-sideThumbTabs-369" theme={{...}} classes={{...}} centered={false} component="div" fullWidth={false} scrollable={false} ScrollButtonComponent={[Function: WithStyles]} scrollButtons="auto" textColor="inherit">
                          <div className="MuiTabs-root-426 RSFTabsRow-root-418 RSFImageSwitcher-tabsRowRoot-388 RSFImageSwitcher-sideThumbTabs-369 RSFTabsRow-root-418 RSFImageSwitcher-tabsRowRoot-388 RSFImageSwitcher-sideThumbTabs-369" variant="scrollable">
                            <EventListener target="window" onResize={[Function: debounced]} />
                            <div className="MuiTabs-flexContainer-427 RSFTabsRow-centered-424 RSFTabsRow-vertical-425">
                              <div className="MuiTabs-scroller-429 RSFTabsRow-scroller-422 RSFImageSwitcher-tabScroller-389 MuiTabs-fixed-430" style={{...}} role="tablist" onScroll={[Function: debounced]}>
                                <div className="MuiTabs-flexContainer-427 RSFTabsRow-centered-424 RSFTabsRow-vertical-425">
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437 MuiTab-selected-440 RSFTabsRow-selectedTab-420 RSFImageSwitcher-selectedSideThumbTab-371" role="tab" aria-selected={true} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437 MuiTab-selected-440 RSFTabsRow-selectedTab-420 RSFImageSwitcher-selectedSideThumbTab-371" role="tab" aria-selected={true} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-404 MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437 MuiTab-selected-440 RSFTabsRow-selectedTab-420 RSFImageSwitcher-selectedSideThumbTab-371" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={true} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-443">
                                              <WithStyles(inject-Image) src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373 RSFImage-root-394 RSFImage-fill-397">
                                                      <img src="/at.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-450" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-450" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-404 MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-443">
                                              <WithStyles(inject-Image) src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373 RSFImage-root-394 RSFImage-fill-397">
                                                      <img src="/bt.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-450" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-450" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-404 MuiTab-root-435 RSFTabsRow-tab-419 RSFImageSwitcher-sideThumbTab-370 MuiTab-textColorInherit-437" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-443">
                                              <WithStyles(inject-Image) src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-372 RSFImageSwitcher-sideThumbnail-373 RSFImage-root-394 RSFImage-fill-397">
                                                      <img src="/ct.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-450" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-450" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                </div>
                                <WithStyles(TabIndicator) className="MuiTabs-indicator-434 RSFTabsRow-indicator-416 RSFTabsRow-noSelection-417" color="secondary" style={{...}}>
                                  <TabIndicator className="MuiTabs-indicator-434 RSFTabsRow-indicator-416 RSFTabsRow-noSelection-417" color="secondary" style={{...}} classes={{...}}>
                                    <span className="MuiPrivateTabIndicator-root-447 MuiPrivateTabIndicator-colorSecondary-449 MuiTabs-indicator-434 RSFTabsRow-indicator-416 RSFTabsRow-noSelection-417" style={{...}} />
                                  </TabIndicator>
                                </WithStyles(TabIndicator)>
                              </div>
                            </div>
                          </div>
                        </Tabs>
                      </WithStyles(Tabs)>
                    </TabsRow>
                  </inject-TabsRow-with-app>
                </WithStyles(inject-TabsRow-with-app)>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`ImageSwitcher should render thumbnails on top 1`] = `
<TestProvider>
  <Provider router={{...}} app={{...}} history={{...}} nextId={[Function: nextId]}>
    <MuiThemeProviderOld theme={{...}}>
      <WithStyles(inject-ImageSwitcher-with-app) images={{...}} thumbnails={{...}} thumbnailPosition="top">
        <inject-ImageSwitcher-with-app images={{...}} thumbnails={{...}} thumbnailPosition="top" classes={{...}}>
          <ImageSwitcher images={{...}} thumbnails={{...}} thumbnailPosition="top" classes={{...}} app={{...}} viewerThumbnailsOnly={false} arrows={true} indicators={false} loadingThumbnailProps={{...}} imageProps={{...}} reactPinchZoomPanOptions={{...}}>
            <div className="RSFImageSwitcher-root-163" style={[undefined]}>
              <div className="RSFImageSwitcher-swipeWrap-164">
                <ReactSwipableView index={0} onChangeIndex={[Function: onChangeIndex]} animateHeight={false} animateTransitions={true} axis="x" disabled={false} disableLazyLoading={false} enableMouseEvents={false} hysteresis={0.6} ignoreNativeScroll={false} threshold={5} springConfig={{...}} resistance={false}>
                  <div style={{...}} onTouchStart={[Function]} onTouchEnd={[Function]} onScroll={[Function]}>
                    <div style={{...}} className="react-swipeable-view-container">
                      <div style={{...}} className={[undefined]} aria-hidden={false} data-swipeable="true">
                        <div className="RSFImageSwitcher-imageWrap-165">
                          <WithStyles(inject-Image) notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]}>
                            <inject-Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}}>
                              <Image notFoundSrc={[undefined]} src="/a.jpg" alt={[undefined]} onLoad={[Function]} classes={{...}} amp={false} quality={{...}} contain={false} fill={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                <div className="RSFImage-root-198">
                                  <img src="/a.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onLoad={[Function]} onError={[Function]} />
                                </div>
                              </Image>
                            </inject-Image>
                          </WithStyles(inject-Image)>
                        </div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
                <div className="RSFImageSwitcher-arrows-180">
                  <WithStyles(IconButton) className="RSFImageSwitcher-arrow-181 RSFImageSwitcher-rightArrow-183" onClick={[Function: onClick]}>
                    <IconButton className="RSFImageSwitcher-arrow-181 RSFImageSwitcher-rightArrow-183" onClick={[Function: onClick]} classes={{...}} color="default" disabled={false}>
                      <WithStyles(ButtonBase) className="MuiIconButton-root-202 RSFImageSwitcher-arrow-181 RSFImageSwitcher-rightArrow-183" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]}>
                        <ButtonBase className="MuiIconButton-root-202 RSFImageSwitcher-arrow-181 RSFImageSwitcher-rightArrow-183" centerRipple={true} focusRipple={true} disabled={false} onClick={[Function: onClick]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                          <button className="MuiButtonBase-root-208 MuiIconButton-root-202 RSFImageSwitcher-arrow-181 RSFImageSwitcher-rightArrow-183" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} onClick={[Function: onClick]}>
                            <span className="MuiIconButton-label-207">
                              <pure(ChevronRightIcon) classes={{...}}>
                                <ChevronRightIcon classes={{...}}>
                                  <WithStyles(SvgIcon) classes={{...}}>
                                    <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                      <svg className="MuiSvgIcon-root-211 RSFImageSwitcher-icon-184" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                        <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                        <path fill="none" d="M0 0h24v24H0z" />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ChevronRightIcon>
                              </pure(ChevronRightIcon)>
                            </span>
                            <NoSsr defer={false} fallback={{...}}>
                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                <TouchRipple center={true} classes={{...}}>
                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-254" childFactory={[Function: childFactory]}>
                                    <span className="MuiTouchRipple-root-254" />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </NoSsr>
                          </button>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </IconButton>
                  </WithStyles(IconButton)>
                </div>
                <Portal disablePortal={false}>
                  <Portal containerInfo={{...}}>
                    <div className="RSFImageSwitcher-viewerOverlay-190">
                      <ReactPinchZoomPan maxScale={3} render={[Function: render]} initialScale={1}>
                        <div>
                          <div style={{...}}>
                            <div style={{...}} className="" onClick={[Function: onClick]}>
                              <img src="/a.jpg" alt={[undefined]} style={{...}} />
                            </div>
                          </div>
                        </div>
                      </ReactPinchZoomPan>
                    </div>
                  </Portal>
                </Portal>
                <div onClick={[Function: onClick]} className="RSFImageSwitcher-viewerToggle-188">
                  <svg width="100" height="100" viewBox="0 0 100 100">
                    <line x1="50" y1="25" x2="50" y2="75" strokeWidth="4" stroke="white" />
                    <line x1="25" y1="50" x2="75" y2="50" strokeWidth="4" stroke="white" />
                  </svg>
                </div>
              </div>
              <div className="RSFImageSwitcher-topThumbs-169">
                <div className="field">
                  <label className="RSFImageSwitcher-thumbsTitle-166" />
                </div>
                <WithStyles(inject-TabsRow-with-app) classes={{...}} imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}}>
                  <inject-TabsRow-with-app imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}}>
                    <TabsRow imageProps={{...}} centered={true} orientation="horizontal" initialSelectedIdx={0} onTabChange={[Function: onTabChange]} items={{...}} classes={{...}} app={{...}} variant="scrollable">
                      <WithStyles(Tabs) value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-222 RSFImageSwitcher-tabsRowRoot-192" classes={{...}}>
                        <Tabs value={0} onChange={[Function]} indicatorColor="secondary" variant="scrollable" className="RSFTabsRow-root-222 RSFImageSwitcher-tabsRowRoot-192" theme={{...}} classes={{...}} centered={false} component="div" fullWidth={false} scrollable={false} ScrollButtonComponent={[Function: WithStyles]} scrollButtons="auto" textColor="inherit">
                          <div className="MuiTabs-root-230 RSFTabsRow-root-222 RSFImageSwitcher-tabsRowRoot-192 RSFTabsRow-root-222 RSFImageSwitcher-tabsRowRoot-192" variant="scrollable">
                            <EventListener target="window" onResize={[Function: debounced]} />
                            <div className="MuiTabs-flexContainer-231 RSFTabsRow-centered-228">
                              <div className="MuiTabs-scroller-233 RSFTabsRow-scroller-226 RSFImageSwitcher-tabScroller-193 MuiTabs-fixed-234" style={{...}} role="tablist" onScroll={[Function: debounced]}>
                                <div className="MuiTabs-flexContainer-231 RSFTabsRow-centered-228">
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={true} onChange={[Function]} textColor="inherit" value={0} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241 MuiTab-selected-244 RSFTabsRow-selectedTab-224" role="tab" aria-selected={true} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241 MuiTab-selected-244 RSFTabsRow-selectedTab-224" role="tab" aria-selected={true} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-208 MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241 MuiTab-selected-244 RSFTabsRow-selectedTab-224" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={true} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-247">
                                              <WithStyles(inject-Image) src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/at.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-176 RSFImage-root-198 RSFImage-fill-201">
                                                      <img src="/at.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-254" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-254" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={1} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-208 MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-247">
                                              <WithStyles(inject-Image) src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/bt.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-176 RSFImage-root-198 RSFImage-fill-201">
                                                      <img src="/bt.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-254" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-254" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                  <WithStyles(Tab) label={[undefined]} icon={{...}} classes={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2}>
                                    <Tab label={[undefined]} icon={{...}} fullWidth={false} indicator={false} selected={false} onChange={[Function]} textColor="inherit" value={2} classes={{...}} disabled={false}>
                                      <WithStyles(ButtonBase) focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" role="tab" aria-selected={false} disabled={false} onClick={[Function]}>
                                        <ButtonBase focusRipple={true} className="MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" role="tab" aria-selected={false} disabled={false} onClick={[Function]} classes={{...}} centerRipple={false} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                          <button className="MuiButtonBase-root-208 MuiTab-root-239 RSFTabsRow-tab-223 MuiTab-textColorInherit-241" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} role="tab" aria-selected={false} onClick={[Function]}>
                                            <span className="MuiTab-wrapper-247">
                                              <WithStyles(inject-Image) src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true}>
                                                <inject-Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}}>
                                                  <Image src="/ct.jpg" alt={[undefined]} className="RSFImageSwitcher-thumbnail-176" notFoundSrc={[undefined]} fill={true} classes={{...}} amp={false} quality={{...}} contain={false} lazy={false} lazyOffset={100} optimize={{...}}>
                                                    <div className="RSFImageSwitcher-thumbnail-176 RSFImage-root-198 RSFImage-fill-201">
                                                      <img src="/ct.jpg" className="" layout={{...}} height={[undefined]} width={[undefined]} alt={[undefined]} amp-bind={[undefined]} onError={[Function]} />
                                                    </div>
                                                  </Image>
                                                </inject-Image>
                                              </WithStyles(inject-Image)>
                                            </span>
                                            <NoSsr defer={false} fallback={{...}}>
                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                <TouchRipple center={false} classes={{...}}>
                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-254" childFactory={[Function: childFactory]}>
                                                    <span className="MuiTouchRipple-root-254" />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Tab>
                                  </WithStyles(Tab)>
                                </div>
                                <WithStyles(TabIndicator) className="MuiTabs-indicator-238 RSFTabsRow-indicator-220" color="secondary" style={{...}}>
                                  <TabIndicator className="MuiTabs-indicator-238 RSFTabsRow-indicator-220" color="secondary" style={{...}} classes={{...}}>
                                    <span className="MuiPrivateTabIndicator-root-251 MuiPrivateTabIndicator-colorSecondary-253 MuiTabs-indicator-238 RSFTabsRow-indicator-220" style={{...}} />
                                  </TabIndicator>
                                </WithStyles(TabIndicator)>
                              </div>
                            </div>
                          </div>
                        </Tabs>
                      </WithStyles(Tabs)>
                    </TabsRow>
                  </inject-TabsRow-with-app>
                </WithStyles(inject-TabsRow-with-app)>
              </div>
            </div>
          </ImageSwitcher>
        </inject-ImageSwitcher-with-app>
      </WithStyles(inject-ImageSwitcher-with-app)>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
